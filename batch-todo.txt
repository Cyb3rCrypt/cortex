DONE
- create virtual service for batch api
- initialize batch endpoint cache based on virtual services
- use fifo-queue
- tag fifo-queue
- delete fifo-queue when batch job gets deleted
- fluentd

- delete old fifo-queues (job doesn't exist)
- write completion spec summary after job is done


TODO

- secure batch endpoints??
- run a background thread in python worker to periodically renew lock on a message because we don't know how long a message will take
- delete queues on cluster down
- disable process per replica and workers per process workflows workflows
- immutable files to the todo list

status scenarios:
- requests being enqueued by operator (async batch request?)
  - what happens if one of the messages is too large?
- request enqueuing has been completed by operator and pods are being initialized?
- what happens if there isn't enough room for all of the pods to run?
- one of the pod fails
- all of the pods fail (items still in queue)


job needs two statuses
- worker/replica stats
- batch progress
